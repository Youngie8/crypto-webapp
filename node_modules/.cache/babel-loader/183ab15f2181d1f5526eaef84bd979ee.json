{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\u\\\\Desktop\\\\Web Dev\\\\crypto-webapp\\\\src\\\\context\\\\CryptoContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useLayoutEffect, useState } from \"react\";\n\n// Creatae context Objext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CryptoContext = /*#__PURE__*/createContext({});\n\n// Create the provider component\nexport const CryptoProvider = ({\n  children\n}) => {\n  _s();\n  const [cryptoData, setCryptoData] = useState();\n  const [searchData, setSearchData] = useState();\n  const [coinSearch, setCoinSearch] = useState(\"\");\n  const [currency, setCurrency] = useState(\"usd\");\n  const [sortBy, setSortBy] = useState(\"market_cap_desc\");\n  const getCryptoData = async () => {\n    try {\n      const data = await fetch(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&ids=${coinSearch}&per_page=10&page=1&price_change_percentage=1h%2C24h%2C7d`).then(res => res.json()).then(json => json);\n      // console.log(data)\n      setCryptoData(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getSearchResult = async query => {\n    try {\n      const data = await fetch(`https://api.coingecko.com/api/v3/search?query=${query}`).then(res => res.json()).then(json => json);\n      console.log(data);\n      setSearchData(data.coins);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useLayoutEffect(() => {\n    getCryptoData();\n  }, [coinSearch, currency, sortBy]);\n  return /*#__PURE__*/_jsxDEV(CryptoContext.Provider, {\n    value: {\n      cryptoData,\n      searchData,\n      getSearchResult,\n      setCoinSearch,\n      setSearchData,\n      currency,\n      setCurrency,\n      sortBy,\n      setSortBy\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(CryptoProvider, \"qzy1LLSPglFdKAdrlU6oKlZwMaM=\");\n_c = CryptoProvider;\nvar _c;\n$RefreshReg$(_c, \"CryptoProvider\");","map":{"version":3,"names":["createContext","useLayoutEffect","useState","jsxDEV","_jsxDEV","CryptoContext","CryptoProvider","children","_s","cryptoData","setCryptoData","searchData","setSearchData","coinSearch","setCoinSearch","currency","setCurrency","sortBy","setSortBy","getCryptoData","data","fetch","then","res","json","error","console","log","getSearchResult","query","coins","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/u/Desktop/Web Dev/crypto-webapp/src/context/CryptoContext.js"],"sourcesContent":["import { createContext, useLayoutEffect, useState } from \"react\"\r\n\r\n// Creatae context Objext\r\nexport const CryptoContext = createContext({})\r\n\r\n// Create the provider component\r\nexport const CryptoProvider = ({children}) => {\r\n    const [cryptoData, setCryptoData] = useState();\r\n    const [searchData, setSearchData] = useState();\r\n    const [coinSearch, setCoinSearch] = useState(\"\");\r\n    const [currency, setCurrency] = useState(\"usd\");\r\n    const [sortBy, setSortBy] = useState(\"market_cap_desc\");   \r\n\r\n    const getCryptoData = async() => {\r\n\r\n        try {\r\n            const data = await fetch(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&ids=${coinSearch}&per_page=10&page=1&price_change_percentage=1h%2C24h%2C7d`)\r\n            .then(res => res.json())\r\n            .then(json => json)\r\n            // console.log(data)\r\n           setCryptoData(data)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const getSearchResult = async(query) => {\r\n\r\n        try {\r\n            const data = await fetch(`https://api.coingecko.com/api/v3/search?query=${query}`)\r\n            .then(res => res.json())\r\n            .then(json => json)\r\n            console.log(data)\r\n           setSearchData(data.coins)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useLayoutEffect(() => {\r\n      getCryptoData();\r\n    }, [coinSearch, currency, sortBy])\r\n    return(\r\n        <CryptoContext.Provider value={{ \r\n        cryptoData, \r\n        searchData, \r\n        getSearchResult, \r\n        setCoinSearch, \r\n        setSearchData, \r\n        currency, \r\n        setCurrency,\r\n        sortBy,\r\n        setSortBy }}>\r\n            {children}\r\n        </CryptoContext.Provider>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,eAAe,EAAEC,QAAQ,QAAQ,OAAO;;AAEhE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,aAAa,gBAAGL,aAAa,CAAC,CAAC,CAAC,CAAC;;AAE9C;AACA,OAAO,MAAMM,cAAc,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAC9C,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,CAAC;EAC9C,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,iBAAiB,CAAC;EAEvD,MAAMiB,aAAa,GAAG,MAAAA,CAAA,KAAW;IAE7B,IAAI;MACA,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE,8DAA6DN,QAAS,QAAOF,UAAW,2DAA0D,CAAC,CAC5KS,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACE,IAAI,IAAIA,IAAI,CAAC;MACnB;MACDd,aAAa,CAACU,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ,CAAC;EAED,MAAMG,eAAe,GAAG,MAAMC,KAAK,IAAK;IAEpC,IAAI;MACA,MAAMT,IAAI,GAAG,MAAMC,KAAK,CAAE,iDAAgDQ,KAAM,EAAC,CAAC,CACjFP,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACE,IAAI,IAAIA,IAAI,CAAC;MACnBE,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;MAClBR,aAAa,CAACQ,IAAI,CAACU,KAAK,CAAC;IAC5B,CAAC,CAAC,OAAOL,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ,CAAC;EAEDxB,eAAe,CAAC,MAAM;IACpBkB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACN,UAAU,EAAEE,QAAQ,EAAEE,MAAM,CAAC,CAAC;EAClC,oBACIb,OAAA,CAACC,aAAa,CAAC0B,QAAQ;IAACC,KAAK,EAAE;MAC/BvB,UAAU;MACVE,UAAU;MACViB,eAAe;MACfd,aAAa;MACbF,aAAa;MACbG,QAAQ;MACRC,WAAW;MACXC,MAAM;MACNC;IAAU,CAAE;IAAAX,QAAA,EACPA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEjC,CAAC;AAAA5B,EAAA,CAlDYF,cAAc;AAAA+B,EAAA,GAAd/B,cAAc;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}